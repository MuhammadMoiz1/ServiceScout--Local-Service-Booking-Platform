// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using ServiceScout_Backend.Data;

#nullable disable

namespace ServiceScout_Backend.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20241128140944_addServieProviderServiceLinkTable")]
    partial class addServieProviderServiceLinkTable
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("ServiceScout_Backend.Data.ServiceProviderServiceLink", b =>
                {
                    b.Property<int>("ServiceVendorId")
                        .HasColumnType("integer");

                    b.Property<int>("VendorServiceId")
                        .HasColumnType("integer");

                    b.HasKey("ServiceVendorId", "VendorServiceId");

                    b.HasIndex("VendorServiceId");

                    b.ToTable("ServiceProviderServiceLinks");
                });

            modelBuilder.Entity("ServiceScout_Backend.Data.ServiceVendor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Area")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("CnicNumber")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ContactInfo")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<decimal>("Rating")
                        .HasColumnType("numeric");

                    b.Property<int>("TotalOrders")
                        .HasColumnType("integer");

                    b.Property<decimal>("TotalRevenue")
                        .HasColumnType("numeric");

                    b.HasKey("Id");

                    b.ToTable("ServiceVendors");
                });

            modelBuilder.Entity("ServiceScout_Backend.Data.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Area")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("CnicNumber")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ContactInfo")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<decimal>("Rating")
                        .HasColumnType("numeric");

                    b.Property<int>("TotalOrders")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("ServiceScout_Backend.Data.VendorService", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("OrdersCount")
                        .HasColumnType("integer");

                    b.Property<string>("ServiceName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("VendorServices");
                });

            modelBuilder.Entity("ServiceScout_Backend.Data.ServiceProviderServiceLink", b =>
                {
                    b.HasOne("ServiceScout_Backend.Data.ServiceVendor", "ServiceVendor")
                        .WithMany("ServiceProviderServiceLinks")
                        .HasForeignKey("ServiceVendorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ServiceScout_Backend.Data.VendorService", "VendorService")
                        .WithMany("ServiceProviderServiceLinks")
                        .HasForeignKey("VendorServiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ServiceVendor");

                    b.Navigation("VendorService");
                });

            modelBuilder.Entity("ServiceScout_Backend.Data.ServiceVendor", b =>
                {
                    b.Navigation("ServiceProviderServiceLinks");
                });

            modelBuilder.Entity("ServiceScout_Backend.Data.VendorService", b =>
                {
                    b.Navigation("ServiceProviderServiceLinks");
                });
#pragma warning restore 612, 618
        }
    }
}
